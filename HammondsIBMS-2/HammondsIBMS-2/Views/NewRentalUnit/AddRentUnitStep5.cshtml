@model HammondsIBMS_2.ViewModels.Basket.RentalBasketVM
<div class="well well-small well-noBackground">
    @Html.ContentTitle(Html.Action("StepperHeader").ToHtmlString())
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.CustomerAccountId)
    @Html.HiddenFor(model => model.Payment)
          @Html.HiddenFor(model => model.FullPayment)
        <fieldset>
            <legend>Payment</legend>
            <div class="control-group">
                @Html.LabelFor(model => model.ModelDescription, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input">@Model.ModelDescription</span>

                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.TotalRental, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input" >@Model.TotalRental.ToString("C")</span>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.TotalDeposit, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input" id="TotalContracts">@Model.TotalDeposit.ToString("C")</span>
                </div>
            </div>
              <div class="control-group">
                @Html.LabelFor(model => model.TotalItemCharges, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input" id="TotalContracts">@Model.TotalItemCharges.ToString("C")</span>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.TotalCharge, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input" id="TotalCharge">@Model.TotalCharge.ToString("C")</span>

                </div>
            </div>
            <br/>
            <div class="control-group">
                @Html.LabelFor(model => model.Payment, new { @class = "control-label" })
                <div class="controls">
@*                    @Html.EditorFor(model => Model.Payment)*@
                    <span class="input-xlarge uneditable-input" id="paymentDisplay">@Model.Payment.ToString("C")</span>
                    <div class="btn-group">

                        @Html.ClientButton(new ButtonParameters(ButtonIcon.Asterisk, ButtonType.ImageText, "Full").Height(ButtonHeight.Small), "settleAllInFull()")@Html.ClientButton(new ButtonParameters(ButtonIcon.FilterClear, ButtonType.ImageText, "Clear").Height(ButtonHeight.Small), "reset()")
                    </div>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Balance, new { @class = "control-label" })
                <div class="controls">
                    <span class="input-xlarge uneditable-input" id="balance">@Model.Balance.ToString("C")</span>
                </div>
            </div>
        </fieldset>
        <div>
            @Html.Action("StepperControl")
        </div>
    }
</div>
<script type="text/javascript">

   
    
    var payment = 0;

    $('#Payment').change(function () {
        updateBalance();
    });
    
    function getFull() {
        return '@Model.TotalCharge';
    }

    function settleAllInFull() {
        updatePayment(getFull());
    }

    function reset() {
        updatePayment(0);
    }

    function updatePayment(val) {
        //getTelerikNumericTextBox('#Payment').value(val);
        payment = val;
        $('#paymentDisplay').html(accounting.formatMoney(val));
        $('#Payment').val(val);
        updateBalance();
    }

    function updateBalance() {
        var balance = getFull() - getPayment();
        $('#balance').html(accounting.formatMoney(balance));
        $('#FullPayment').val(balance == 0);
    }

    function getPayment() {
        return payment;
    }

    function getAccountData(func) {
        $.get('@Url.Action("_GetAddRentAccount")', function (data) {
            func(data);
        });
    }
</script>



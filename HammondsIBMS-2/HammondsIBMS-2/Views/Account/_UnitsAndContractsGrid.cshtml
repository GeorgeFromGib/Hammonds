<script type="text/javascript">

    $(function () {
        $('#UnitsAndContractsGrid').die();
        $('#UnitsAndContractsGrid').live('rebind', function (event) {
            UnitsAndContractsGrid_Rebind();
        });
        $('[name=_ShowExpiredContracts]').live('click', function () {
            UnitsAndContractsGrid_Rebind();
        });
    });

    function UnitsAndContractsGrid_Rebind() {
        RebindTelerikGrid("UnitsAndContractsGridVM");
    }

    function _onUnitChanged() {
        UnitsAndContractsGrid_Rebind();
        $('#UnitsAndContractsGrid').trigger('onUnitChanged');
    }

    function UnitsAndContractsGridVM_expandGridRow_onRowDataBound(e) {
        var grid = $(this).data('tGrid');
        grid.expandRow(e.row);
    }

    function UnitsAndContractsGridVM_ContractsView_expandGridRow_onRowDataBound(e) {
        var data = e.dataItem;
        var target = $('#ExpiryWarningId' + data.ContractId);
        var payload = '';
        if (data.ExpiryWarning == true)
            payload = '<img alt="Expiry Warning" src="@Url.Content("~/Content/Site/icons/warning_16x16.png")" title="Expiry Warning"/>';
        if (data.IsExpiredToday == true)
            payload = '<img alt="Expired" src="@Url.Content("~/Content/Site/icons/expired_16x16.png")" title="Expired"/>';
        $(target).html(payload);
        if (data.IsExpiredToday == true) {
            $('#CommandContractId' + data.ContractId).hide();
        }
    }

    function UnitsAndContractsGridVM_ContractsView_expandGridRow_DataBound(e) {
        e.data = {
            showExpired: GetCheckBoxValue("#_ShowExpiredContracts")
        };

    }

</script>

@using HammondsIBMS_2.ViewModels.Contract
@{
    var parentId = ViewData["parentId"];
    var controller = ViewData["controller"].ToString();
    var editUnit = (ViewData["editUnit"] != null && bool.Parse(ViewData["editUnit"].ToString()));
    var showToggles = (ViewData["showToggles"] != null && bool.Parse(ViewData["showToggles"].ToString()));
}
<div id="UnitsAndContractsGrid"></div>
@if (showToggles)
{
    <fieldset>
        <div>@Html.CheckBoxLabelled("_ShowExpiredContracts", false, "Show Expired Contracts")</div>
    </fieldset>
}
@{Html.Telerik().Grid<PurchasedUnitVM>()
                .Name("UnitsAndContractsGridVM")
                .DataKeys(keys => keys.Add(o => o.UnitId))
                .DataBinding(databind => databind.Ajax()
                            .Select("_DisplayPurchasedUnits", controller, new { parentId = parentId }))
                .Columns(columns =>
                {

                    columns.Bound(o => o.StockDescription);
                    columns.Bound(o => o.Identifier);
                    columns.Bound(o => o.PurchasedDate).Format("{0:dd/MM/yyyy}");
                    columns.Bound(o => o.RetailCost).Format("{0:£#0.00}");
                    columns.Bound(o => o.DiscountedAmount).Format("{0:£#0.00}");
                    columns.Bound(o => o.Total).Format("{0:£#0.00}");
                    columns.Bound(o => o.UnitId).Title("").Sortable(false).Visible(editUnit).Width(30).ClientTemplate("<div class='commandColumn'>" + @Html.ActionDialogFormButton(new TelerikButtonParameters(ButtonIcon.Edit),
                                                                                                                                                                 new ActionParameters("_EditPurchaseUnit", controller, new { id = "<#= UnitId #>" }),
                                                                                                                                                                 new ActionDialogFormParamters("Edit Purchase Unit", null, Url.Action("_EditPurchaseUnit", controller), null, "_onUnitChanged")).ToHtmlString() +
                                                                                                    "</div>"
                       );
                    columns.Bound(o => o.UnitId).Title("").Sortable(false).Width(30).ClientTemplate("<div class='commandColumn'>" + Html.ActionDialogFormButton(new TelerikButtonParameters(ButtonIcon.Delete),
                                                                                                                                                                    new ActionParameters("_DeletePurchaseUnit", controller, new { id = "<#= UnitId #>" }),
                                                                                                                                                                    new ActionDialogFormParamters("Remove Purchase Unit", null, Url.Action("_DeletePurchaseUnit", controller), null, "_onUnitChanged")).ToHtmlString() +
                                                                                                    "</div>");
                    columns.Bound(o => o.UnitId).Title("").Sortable(false).Width(115).ClientTemplate("<div class='commandColumn'>" + @Html.ActionDialogFormButton(new TelerikButtonParameters(ButtonIcon.Add, ButtonType.ImageText, "Contracts").Tip("Add Contracts"),
                                                                                                                                          new ActionParameters("_AddUnitContracts", controller, new { id = "<#= UnitId #>" }),
                                                                                                                                          new ActionDialogFormParamters("Add Contracts", null, Url.Action("_AddUnitContracts", controller), null, "_onUnitChanged")) +


                                                                                                    "</div>"
                       );


                })
                                          .ClientEvents(events => events.OnRowDataBound("UnitsAndContractsGridVM_expandGridRow_onRowDataBound"))
                                          .DetailView(contractsView => contractsView.ClientTemplate(
                                              Html.Telerik().Grid<ServiceContractVM>()
                                                .Name("contractsView_<#= UnitId #>")
                                                .DataBinding(dataBinding => dataBinding.Ajax()
                                                    .Select("_DisplayPurchaseUnitContracts", controller, new { unitId = "<#= UnitId #>" }))
                                                .Columns(columns =>
                                                {
                                                    columns.Bound(o => o.ContractId).Title("").Width(16).ClientTemplate("<div id='ExpiryWarningId" + "<#= ContractId #>'" + "></div>").HtmlAttributes(new { style = "text-align:center" });
                                                    columns.Bound(o => o.ContractTypeDescription).Title("Attached Contract");
                                                    columns.Bound(o => o.ContractLengthInMonths);
                                                    columns.Bound(o => o.StartDate).Format("{0:dd/MM/yyyy}");
                                                    columns.Bound(o => o.ExpiryDate).Format("{0:dd/MM/yyyy}");
                                                    columns.Bound(o => o.ContractStatusDescription);
                                                    columns.Bound(o => o.Charge).Format("{0:£#0.00}");
                                                    columns.Bound(o => o.PeriodPaymentAmount).Format("{0:£#0.00}");
                                                    columns.Bound(o => o.PaymentPeriodDescription);
                                                    columns.Bound(o => o.ContractId).Title("").Sortable(false).Width(80)
                                                            .ClientTemplate("<div class='commandColumn' id='CommandContractId<#= ContractId #>'>"
                                                        //+ @Html.ActionDialogFormButton(new TelerikButtonParameters(ButtonIcon.Edit),
                                                        //     new ActionParameters("_EditTempPurchaseServiceContract", new { id = "<#= ContractId #>" }),
                                                        //     new ActionDialogFormParamters("Change Payment Period", null, "_EditTempPurchaseServiceContract", null, "_onUnitChanged")).ToHtmlString()
                                                                                + Html.ActionDialogFormButton(new TelerikButtonParameters(ButtonIcon.Delete),
                                                                                     new ActionParameters("_DeletePurchaseUnitContract", controller, new { id = "<#= ContractId #>" }),
                                                                                     new ActionDialogFormParamters("Delete Contract", null,
                                                                                                      Url.Action("_DeletePurchaseUnitContract", controller), null, "_onUnitChanged")).ToHtmlString()
                                                                        + "</div>");
                                                })
                                                .Footer(false)
                                                .ClientEvents(events => events.OnRowDataBound("UnitsAndContractsGridVM_ContractsView_expandGridRow_onRowDataBound").OnDataBinding("UnitsAndContractsGridVM_ContractsView_expandGridRow_DataBound"))
                                                .ToHtmlString() + Html.Raw("</br>").ToHtmlString()
                                              ))

                                          .Editable(editing => editing.Mode(GridEditMode.PopUp))
                                          .Pageable()
                                          .Sortable()
                                          .Footer(false)
                                          .Render();
}

